# Suggested value for gracefully terminate the pod: 1 hour
terminationGracePeriodSeconds: 3600

egress:
  api_key: "sandbox-key"
  api_secret: "Yw3E1V0eFMv4Tm5ShxP1WgIYfXOt1Lzrz7EsNgP+ev4="
  ws_url: "ws://livekit-server"
  log_level: info
  health_port: 8080
  prometheus_port: 9090
  enable_chrome_sandbox: true
  redis:
    address: db.default.svc.cluster.local:6379


# autoscaling requires resources to be defined
autoscaling:
  # set to true to enable autoscaling. when set, ignores replicaCount
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 60
#  targetMemoryUtilizationPercentage: 60
  # for use with prometheus adapter - the egress service outputs a prometheus metric called livekit_egress_available
  # this can be used to ensure a certain number or percentage of instances are available
#  custom:
#    metricName: my_metric_name
#    targetAverageValue: 70

# if egress should run only on specific nodes
# this can be used to isolate designated nodes
nodeSelector: {}
# node.kubernetes.io/instance-type: c5.2xlarge

resources:
  requests:
    cpu: 5000m
    memory: 1024Mi
  limits:
    cpu: 8000m
    memory: 2048Mi

serviceAccount:
  # Specifies whether a service account should be created
  # create: false
  # # Annotations to add to the service account
  # annotations: {}
  # # The name of the service account to use.
  # # If not set and create is true, a name is generated using the fullname template
  # name: ""
  name: livekit-egress
podAnnotations:
  linkerd.io/inject: disabled


